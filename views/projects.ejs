<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Tailwind Import -->
    <script src="https://cdn.tailwindcss.com"></script>
    <title>Projects</title>
    <link rel="stylesheet" href="main.css">
    <style>
body {
    margin: 0;
    padding: 0;
    background-color: #f4f4f4;
}

header {
    background-color: #333;
    color: white;
    padding: 1rem;
    text-align: center;
}

main {
    padding: 1rem;
}

form {
    display: flex;
    gap: 0.5rem;
}

form input {
    flex: 1;
    padding: 0.5rem;
}

form button {
    padding: 0.5rem;
    background-color: #333;
    color: white;
    border: none;
    cursor: pointer;
}

form button:hover {
    background-color: #555;
}

ul {
    list-style-type: none;
    padding: 0;
}

ul li {
    background-color: #1f2937;
    margin: 0.5rem 0;
    padding: 0.5rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border: 1px solid #ccc;
}

ul li button {
    background-color: red;
    color: white;
    border: none;
    padding: 0.25rem 0.5rem;
    cursor: pointer;
}

ul li button.edit {
    background-color: #4CAF50;
}

ul li button:hover {
    background-color: darkred;
}

ul li button.edit:hover {
    background-color: #3e8e41;
}

span {
    color: white;
}

#editProjectForm {
    display: none;
}

    </style>
</head>
<body>
<!-- Navigation -->
<nav class="bg-gray-800 p-4">
    <div class="container mx-auto flex justify-between items-center">
        <a href="/" class="text-white text-lg font-bold">MyApp</a>
        <div class="flex space-x-4">
            <% if (!isAuthenticated) { %>
                <a href="/login" class="text-white hover:text-gray-300">Log In</a>
            <% } else { %>
                <a href="/profile" class="text-white hover:text-gray-300">Profile</a>
                <a href="/projects" class="text-white hover:text-gray-300">Projects</a>
                <a href="/github-calendar" class="text-white hover:text-gray-300">Github</a>
                <a href="/logout" class="text-white hover:text-gray-300">Logout</a>
            <% } %>
        </div>
    </div>
</nav>
    <div class="projects-section">
        <h1 class="text-5xl font-bold mb-6">Projects</h1>
        <p>Create projects to showcase your work</p>
    </div>

    <main>
        <section>
            <h2>Add a project</h2>
            <form id="projectForm">
                <input type="text" id="projectTitle" placeholder="Project title" required>
                <button type="submit">Add project</button>
            </form>
        </section>
        <section>
            <h2>Projects</h2>
            <ul id="projectList"></ul>
        </section>

        <!-- Edit form -->
        <form id="editProjectForm">
            <label for="editProjectTitle">Edit project title:</label>
            <input type="text" id="editProjectTitle" required>
            <button type="button" id="saveProjectButton">Save</button>
        </form>

        
    </main>
    <script>
        document.addEventListener("DOMContentLoaded", () => {
            const projectForm = document.getElementById("projectForm");
            const projectList = document.getElementById("projectList");

            // Add project
            projectForm.addEventListener("submit", (e) => {
                e.preventDefault();
                const projectTitle = document.getElementById("projectTitle").value.trim();

                if (projectTitle) {
                    const projectItem = document.createElement("li");
                    projectItem.innerHTML = `
                        <span>${projectTitle}</span>
                        <button class="edit">Edit</button>
                        <button class="delete">Delete</button>
                    `;
                    projectList.appendChild(projectItem);

                    // Clear the input field
                    projectForm.reset();
                }
            });

            // Edit and delete projects
            projectList.addEventListener("click", (e) => {
                const target = e.target;

                // Delete project
                if (target.classList.contains("delete")) {
                    const projectItem = target.parentElement;
                    projectItem.remove();
                }
                /*

                // Edit project
                if (target.classList.contains("edit")) {
                    const projectItem = target.parentElement;
                    const currentTitle = projectItem.querySelector("span").textContent;

                    // Create an input field for editing
                    const editInput = document.createElement("input");
                    editInput.type = "text";
                    editInput.value = currentTitle;

                    // Replace the title span with the input field
                    projectItem.querySelector("span").replaceWith(editInput);

                    // Change the "Edit" button to "Save"
                    target.textContent = "Save";
                    target.classList.remove("edit");
                    target.classList.add("save");
                }
                    */

                    // Edit project 2
                    if (target.classList.contains("edit")) {
                        const projectItem = target.parentElement;
                        const currentTitle = projectItem.querySelector("span").textContent;

                        // Unblock the edit form
                        const editProjectForm = document.getElementById("editProjectForm");
                        editProjectForm.style.display = "block";

                        // Populate the edit form with the current title
                        const editProjectTitle = document.getElementById("editProjectTitle");
                        editProjectTitle.value = currentTitle;

                        // Add event listener to the save button
                        const saveProjectButton = document.getElementById("saveProjectButton");
                        saveProjectButton.addEventListener("click", () => {
                            // Replace the title span with the edited title
                            const editedTitle = editProjectTitle.value;
                            projectItem.querySelector("span").textContent = editedTitle;

                            // Hide the edit form
                            editProjectForm.style.display = "none";
                        });
                    }

                // Save edited project
                if (target.classList.contains("save")) {
                    const projectItem = target.parentElement;
                    const editInput = projectItem.querySelector("input");

                    // Replace the input field with the updated title
                    const updatedTitle = document.createElement("span");
                    updatedTitle.textContent = editInput.value;
                    editInput.replaceWith(updatedTitle);

                    // Change the "Save" button back to "Edit"
                    target.textContent = "Edit";
                    target.classList.remove("save");
                    target.classList.add("edit");
                }
            });
        });
    </script>


</body>
</html>
